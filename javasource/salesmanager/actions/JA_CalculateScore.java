// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package salesmanager.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import salesmanager.proxies.SalesTransaction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.math.BigDecimal;
import org.apache.commons.math3.stat.descriptive.*;

public class JA_CalculateScore extends CustomJavaAction<IMendixObject>
{
	private java.util.List<IMendixObject> __SalesTransactionList;
	private java.util.List<salesmanager.proxies.SalesTransaction> SalesTransactionList;
	private IMendixObject __Score;
	private salesmanager.proxies.Score Score;

	public JA_CalculateScore(IContext context, java.util.List<IMendixObject> SalesTransactionList, IMendixObject Score)
	{
		super(context);
		this.__SalesTransactionList = SalesTransactionList;
		this.__Score = Score;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.SalesTransactionList = new java.util.ArrayList<salesmanager.proxies.SalesTransaction>();
		if (__SalesTransactionList != null)
			for (IMendixObject __SalesTransactionListElement : __SalesTransactionList)
				this.SalesTransactionList.add(salesmanager.proxies.SalesTransaction.initialize(getContext(), __SalesTransactionListElement));

		this.Score = __Score == null ? null : salesmanager.proxies.Score.initialize(getContext(), __Score);

		// BEGIN USER CODE
		DescriptiveStatistics  stats = new DescriptiveStatistics();
		
		for (SalesTransaction transaction : SalesTransactionList) {
			BigDecimal total = transaction.getTotalByRow();
			stats.addValue(total.doubleValue());			
		}
		
		BigDecimal mean = new BigDecimal(stats.getMean());
		BigDecimal median = new BigDecimal(stats.getPercentile(50));
		BigDecimal standartDeviation = new BigDecimal(stats.getStandardDeviation());
		
		this.Score.setMean(mean);
		this.Score.setStandartDeviation(standartDeviation);
		this.Score.setMedian(median);
		
		return this.__Score;
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_CalculateScore";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
